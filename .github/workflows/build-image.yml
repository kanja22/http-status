name: 'CI/CD'

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tagger.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          include: 'v*'
          exclude: '*-rc*'
          abbrev: 10
          commit-ish: HEAD

      - name: Cache Carton local/
        uses: actions/cache@v2
        with:
          path: |
            local
          key: ${{ runner.os }}-perllocal-${{ hashFiles('**/cpanfile') }}-${{ hashFiles('**/cpanfile.snapshot') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/kanja22/http-status:latest
            ghcr.io/kanja22/http-status:${{ steps.tagger.outputs.tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: azure/k8s-set-context@v1
        id: setcontext
        with:
          method: service-account
          k8s-url: ${{ secrets.K8S_MACY_URL }}
          k8s-secret: ${{ secrets.K8S_MACY_TOKEN }}

      - uses: Azure/k8s-deploy@v1.4
        with:
          namespace: 'http-status'
          manifests: |
            k8s/http-status.yaml
          images: ghcr.io/kanja22/http-status:${{ needs.build.outputs.tag }}
          kubectl-version: 'latest'